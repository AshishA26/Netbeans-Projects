/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ashish
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtToEncrypt = new javax.swing.JTextField();
        lblEncryptInstructions = new javax.swing.JLabel();
        BtnEncrypt = new javax.swing.JButton();
        lblHeading = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtEncrypted = new javax.swing.JTextField();
        txtDecrypted = new javax.swing.JTextField();
        txtToDecrypt = new javax.swing.JTextField();
        lblDecryptInstructions = new javax.swing.JLabel();
        BtnDecrypt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtToEncrypt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtToEncrypt.setToolTipText("");
        txtToEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToEncryptActionPerformed(evt);
            }
        });

        lblEncryptInstructions.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lblEncryptInstructions.setForeground(new java.awt.Color(153, 0, 51));
        lblEncryptInstructions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncryptInstructions.setText("Enter a decrypted message and it will be encrypted.");

        BtnEncrypt.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        BtnEncrypt.setForeground(new java.awt.Color(255, 51, 51));
        BtnEncrypt.setText("Encrypt");
        BtnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEncryptActionPerformed(evt);
            }
        });

        lblHeading.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(0, 0, 0));
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("---Encrypt/Decrypt Software---");

        lblTitle.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 0, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("---Top Secret---");

        txtEncrypted.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEncrypted.setText("Encrypted message will be displayed here...");
        txtEncrypted.setToolTipText("");
        txtEncrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncryptedActionPerformed(evt);
            }
        });

        txtDecrypted.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDecrypted.setText("Decrypted message will be displayed here...");
        txtDecrypted.setToolTipText("");
        txtDecrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDecryptedActionPerformed(evt);
            }
        });

        txtToDecrypt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtToDecrypt.setToolTipText("");
        txtToDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToDecryptActionPerformed(evt);
            }
        });

        lblDecryptInstructions.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lblDecryptInstructions.setForeground(new java.awt.Color(153, 0, 51));
        lblDecryptInstructions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDecryptInstructions.setText("Enter a encrypted message and it will be decrypted.");

        BtnDecrypt.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        BtnDecrypt.setForeground(new java.awt.Color(255, 51, 51));
        BtnDecrypt.setText("Decrypt");
        BtnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDecryptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnEncrypt)
                .addGap(209, 209, 209))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtToEncrypt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEncryptInstructions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEncrypted)
                    .addComponent(txtToDecrypt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnDecrypt)
                        .addGap(203, 203, 203))
                    .addComponent(lblDecryptInstructions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDecrypted))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(2, 2, 2)
                .addComponent(lblHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEncryptInstructions)
                .addGap(1, 1, 1)
                .addComponent(txtToEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDecryptInstructions)
                .addGap(1, 1, 1)
                .addComponent(txtToDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnDecrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDecrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtToEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToEncryptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToEncryptActionPerformed
    public static String encryptMessage(String ToEncrypt) {
        // Initialize variables
        String encryptedMsg = "";
        char tempChar;
        int tempAscii;
        // For each character, does a ceaser cipher, shifting each character by 3
        for (int i = 0; i < ToEncrypt.length(); i = i + 1) {
            tempChar = ToEncrypt.charAt(i);
            tempAscii = (int) tempChar;
            tempAscii = tempAscii + 3;
            tempChar = (char) tempAscii;
            encryptedMsg = encryptedMsg + tempChar;
        }
        // Returns encrypted message
        return encryptedMsg;
    }
    private void BtnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEncryptActionPerformed
        // Initialize variables and get the message to encrypt from the user
        String ToEncrypt = txtToEncrypt.getText();
        String encryptedMsg = "";

        // Check if message is less than 31 characters long, if not, then output message saying that to the user
        if (ToEncrypt.length() < 31) {
            // Send the message to encrypt to the method
            encryptedMsg = encryptMessage(ToEncrypt);
            // Output encrypted message to user
            txtEncrypted.setText(encryptedMsg);
        } else {
            txtEncrypted.setText("PLEASE ENTER A MESSAGE LESS THAN 31 CHARACTERS LONG.");
        }
    }//GEN-LAST:event_BtnEncryptActionPerformed

    private void txtEncryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncryptedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncryptedActionPerformed

    private void txtDecryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDecryptedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDecryptedActionPerformed

    private void txtToDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToDecryptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDecryptActionPerformed
    public static String decryptMessage(String ToDecrypt) {
        // Initialize variables
        String decryptedMsg = "";
        char tempChar;
        int tempAscii;
        // For each character, undos ceaser cipher, shifting each character back by 3
        for (int i = 0; i < ToDecrypt.length(); i = i + 1) {
            tempChar = ToDecrypt.charAt(i);
            tempAscii = (int) tempChar;
            tempAscii = tempAscii - 3;
            tempChar = (char) tempAscii;
            decryptedMsg = decryptedMsg + tempChar;
        }
        // Returns decrypted message
        return decryptedMsg;
    }
    private void BtnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDecryptActionPerformed
        // Initialize variables and get the message to decrypt from the user
        String ToDecrypt = txtToDecrypt.getText();
        String decryptedMsg = "";

        // Check if message is less than 31 characters long, if not, then output message saying that to the user
        if (ToDecrypt.length() < 31) {
            // Send the message to encrypt to the method
            decryptedMsg = decryptMessage(ToDecrypt);
            // Output decrypted message to user
            txtDecrypted.setText(decryptedMsg);
        } else {
            txtDecrypted.setText("PLEASE ENTER A MESSAGE LESS THAN 31 CHARACTERS LONG.");
        }
    }//GEN-LAST:event_BtnDecryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDecrypt;
    private javax.swing.JButton BtnEncrypt;
    private javax.swing.JLabel lblDecryptInstructions;
    private javax.swing.JLabel lblEncryptInstructions;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDecrypted;
    private javax.swing.JTextField txtEncrypted;
    private javax.swing.JTextField txtToDecrypt;
    private javax.swing.JTextField txtToEncrypt;
    // End of variables declaration//GEN-END:variables
}
